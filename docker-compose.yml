version: '3'
services:
  nodejs:
    container_name: ${COMPOSE_PROJECT_NAME}_${NODEJS_SERVER_NAME}
    image: ${NODEJS_CONTAINER_IMAGE}
    user: ${NODEJS_USER}
    env_file: ./.env
    command: ${NODEJS_COMMAND}
    ports:
      - "4040:4040"
    environment:
      NODE_ENV: ${NODEJS_ENV}
    volumes:
      - ${PWD}:/home/node/project
    working_dir: /home/node/project
    networks:
      app_net:
        ipv4_address: ${IP_NODE_SERVER}

  mysqlserver:
    container_name: ${COMPOSE_PROJECT_NAME}_${NODEJS_SERVER_NAME}_db
    image: mysql:5.7
    env_file: ./.env
    command: --max_allowed_packet=1000000000

    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASS}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}

    volumes:
      - ${MYSQL_BACKUP_FOLDER}:/backup/
      - ${MYSQL_FOLDER}:/var/lib/mysql
      - ./setup.sql:/docker-entrypoint-initdb.d/setup.sql

    networks:
      app_net:
        ipv4_address: ${IP_MYSQL_SERVER}

  redis:
    image: redis:alpine
    container_name: ${COMPOSE_PROJECT_NAME}_${NODEJS_SERVER_NAME}_redis
    env_file: ./.env

    networks:
      app_net:
        ipv4_address: ${IP_REDIS_SERVER}

networks:
  app_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${IP_SUBNET}